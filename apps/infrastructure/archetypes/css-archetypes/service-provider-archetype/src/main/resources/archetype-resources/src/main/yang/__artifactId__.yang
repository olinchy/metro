#set( $ldt = $package.getClass().forName("java.time.LocalDateTime").getMethod("now").invoke(null) )
#set( $dtf = $package.getClass().forName("java.time.format.DateTimeFormatter").getMethod("ofPattern", $package.getClass()).invoke(null, "yyyy-MM-dd") )
#set( $date = $ldt.format($dtf) )
module ${artifactId} {
    yang-version 1;
    namespace "urn:zte:sdn:mw:${artifactId.replaceAll("-",":")}:impl";
    prefix "${artifactId}";

    import config { prefix config; revision-date 2013-04-05; }
    import opendaylight-md-sal-binding { prefix mdsal; revision-date 2013-10-28;}
    import ${serviceModule} { prefix ${serviceModule}; revision-date ${serviceRevision};}

    organization "ZTE";

    description
        "Service definition for ${artifactId} project";

    revision "${date}" {
        description
            "Initial revision";
    }

    identity ${artifactId} {
         base config:module-type;
         config:provided-service ${serviceModule}:${serviceName};
         config:java-name-prefix ${classPrefix};
    }

    augment "/config:modules/config:module/config:configuration" {
         case ${artifactId} {
              when "/config:modules/config:module/config:type = '${artifactId}'";
              leaf name-prefix {
                  type string;
              }
         }
    }
}
